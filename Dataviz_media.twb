<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Extrait corpus11_ovni+ (Connexions multiples)' inline='true' name='federated.0r57vmr1pu8w6q1cnzvqg1j81pez' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='corpus11_ovni+ (Connexions multiples)' name='hyper.19tgq181t70c9c1env1v605eb906'>
            <connection authentication='auth-none' author-locale='fr_FR' class='hyper' dbname='C:/Users/UFR PHILLIA/Downloads/corpus11_ovni+ (Connexions multiples).hyper' default-settings='yes' server='' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='hyper.19tgq181t70c9c1env1v605eb906' name='Extract' table='[Extract].[Extract]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='yyyy-MM-' name='datdif' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='hyper.19tgq181t70c9c1env1v605eb906' name='Extract' table='[Extract].[Extract]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='yyyy-MM-' name='datdif' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>no1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[no1]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>no1</remote-alias>
            <ordinal>0</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3396</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[base_label]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>base_label</remote-alias>
            <ordinal>1</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base</remote-name>
            <remote-type>129</remote-type>
            <local-name>[base]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>base</remote-alias>
            <ordinal>2</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[base_id]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>base_id</remote-alias>
            <ordinal>3</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ch</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ch]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ch</remote-alias>
            <ordinal>4</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>136</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ch_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ch_code]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ch_code</remote-alias>
            <ordinal>5</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>128</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>datdif</remote-name>
            <remote-type>7</remote-type>
            <local-name>[datdif]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>datdif</remote-alias>
            <ordinal>6</ordinal>
            <family>corpus11_ovni</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>datdifsec</remote-name>
            <remote-type>129</remote-type>
            <local-name>[datdifsec]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>datdifsec</remote-alias>
            <ordinal>7</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3396</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>liensom</remote-name>
            <remote-type>129</remote-type>
            <local-name>[liensom]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>liensom</remote-alias>
            <ordinal>8</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1857</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>heure</remote-name>
            <remote-type>135</remote-type>
            <local-name>[heure]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>heure</remote-alias>
            <ordinal>9</ordinal>
            <family>corpus11_ovni</family>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <approx-count>2694</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>heuremin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[heuremin]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>heuremin</remote-alias>
            <ordinal>10</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2694</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duree</remote-name>
            <remote-type>129</remote-type>
            <local-name>[duree]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>duree</remote-alias>
            <ordinal>11</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1944</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dureemin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dureemin]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>dureemin</remote-alias>
            <ordinal>12</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1560</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ti</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ti]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ti</remote-alias>
            <ordinal>13</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3273</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ticol</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ticol]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ticol</remote-alias>
            <ordinal>14</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1204</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tiprog</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tiprog]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>tiprog</remote-alias>
            <ordinal>15</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1803</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>typdescr</remote-name>
            <remote-type>129</remote-type>
            <local-name>[typdescr]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>typdescr</remote-alias>
            <ordinal>16</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>10</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jour</remote-name>
            <remote-type>129</remote-type>
            <local-name>[jour]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>jour</remote-alias>
            <ordinal>17</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>7</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>public</remote-name>
            <remote-type>129</remote-type>
            <local-name>[public]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>public</remote-alias>
            <ordinal>18</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>16</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>chap</remote-name>
            <remote-type>129</remote-type>
            <local-name>[chap]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>chap</remote-alias>
            <ordinal>19</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1183</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>som</remote-name>
            <remote-type>129</remote-type>
            <local-name>[som]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>som</remote-alias>
            <ordinal>20</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>585</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>res</remote-name>
            <remote-type>129</remote-type>
            <local-name>[res]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>res</remote-alias>
            <ordinal>21</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1589</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>resprod</remote-name>
            <remote-type>129</remote-type>
            <local-name>[resprod]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>resprod</remote-alias>
            <ordinal>22</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1458</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[seq]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>seq</remote-alias>
            <ordinal>23</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>403</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>genre</remote-name>
            <remote-type>129</remote-type>
            <local-name>[genre]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>genre</remote-alias>
            <ordinal>24</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>222</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prod</remote-name>
            <remote-type>129</remote-type>
            <local-name>[prod]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>prod</remote-alias>
            <ordinal>25</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1689</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>des</remote-name>
            <remote-type>129</remote-type>
            <local-name>[des]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>des</remote-alias>
            <ordinal>26</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>823</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>da</remote-name>
            <remote-type>129</remote-type>
            <local-name>[da]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>da</remote-alias>
            <ordinal>27</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gen</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gen]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>gen</remote-alias>
            <ordinal>28</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2550</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gens</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gens]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>gens</remote-alias>
            <ordinal>29</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>220</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sp]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>sp</remote-alias>
            <ordinal>30</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>109</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pays</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pays]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>pays</remote-alias>
            <ordinal>31</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>80</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lieu</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lieu]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>lieu</remote-alias>
            <ordinal>32</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>periode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[periode]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>periode</remote-alias>
            <ordinal>33</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mediamat</remote-name>
            <remote-type>129</remote-type>
            <local-name>[mediamat]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>mediamat</remote-alias>
            <ordinal>34</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>63</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aud</remote-name>
            <remote-type>129</remote-type>
            <local-name>[aud]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>aud</remote-alias>
            <ordinal>35</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>102</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aud15</remote-name>
            <remote-type>129</remote-type>
            <local-name>[aud15]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>aud15</remote-alias>
            <ordinal>36</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>99</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>audf</remote-name>
            <remote-type>129</remote-type>
            <local-name>[audf]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>audf</remote-alias>
            <ordinal>37</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>124</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>audh</remote-name>
            <remote-type>129</remote-type>
            <local-name>[audh]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>audh</remote-alias>
            <ordinal>38</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>96</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pdm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pdm]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>pdm</remote-alias>
            <ordinal>39</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>295</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pdm15</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pdm15]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>pdm15</remote-alias>
            <ordinal>40</ordinal>
            <family>corpus11_ovni</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>317</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>no</remote-name>
            <remote-type>129</remote-type>
            <local-name>[no]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>no</remote-alias>
            <ordinal>41</ordinal>
            <family>MotsClesCorpusOvni.txt</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2545</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>de</remote-name>
            <remote-type>129</remote-type>
            <local-name>[de]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>de</remote-alias>
            <ordinal>42</ordinal>
            <family>MotsClesCorpusOvni.txt</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2084</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='choisir un résumé existant' datatype='string' name='[Calculation_193091896166891523]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL([res]) AND ISNULL([resprod]) THEN NULL&#13;&#10;ELSEIF ISNULL([res]) THEN [resprod]&#13;&#10;ELSEIF ISNULL([resprod]) THEN [res]&#13;&#10;ELSE [res]&#13;&#10;END' />
      </column>
      <column caption='choix res ou resprod' datatype='string' name='[Calculation_193091896168726532]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL([res]) AND ISNULL([resprod]) THEN NULL&#13;&#10;ELSEIF ISNULL([res]) THEN [resprod]&#13;&#10;ELSEIF ISNULL([resprod]) THEN [res]&#13;&#10;ELSE [res]&#13;&#10;END' />
      </column>
      <column caption='keyword sans parenthese et que le premier' datatype='string' name='[Calculation_193091896178548741]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='REGEXP_EXTRACT([de], &apos;([^()]*)&apos;)' />
      </column>
      <column caption='Filtre par desc' datatype='string' name='[Calculation_696650629407948801]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL([res]) AND ISNULL([resprod]) THEN &quot;Non&quot; ELSE &quot;Oui&quot; END' />
      </column>
      <column caption='Séparer les genre ' datatype='string' name='[Calculation_696650629425852419]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([genre], &quot;,&quot;) THEN&#13;&#10;    LEFT([genre], FIND([genre], &quot;,&quot;) - 1)&#13;&#10;ELSE&#13;&#10;    [genre]&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Extrait ]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[genre]' new-bin='true'>
          <bin default-name='false' value='&quot;Adaptation&quot;'>
            <value>&quot;Adaptation, Animation, Série&quot;</value>
            <value>&quot;Adaptation, Série&quot;</value>
            <value>&quot;Adaptation, Spectacle TV&quot;</value>
            <value>&quot;Adaptation, Téléfilm&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Animation&quot;'>
            <value>&quot;Animation&quot;</value>
            <value>&quot;Animation, Adaptation, Série&quot;</value>
            <value>&quot;Animation, Court métrage&quot;</value>
            <value>&quot;Animation, Court métrage, Série&quot;</value>
            <value>&quot;Animation, Magazine&quot;</value>
            <value>&quot;Animation, Série&quot;</value>
            <value>&quot;Animation, Série, Adaptation&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Brève&quot;'>
            <value>&quot;Brève, Journal télévisé&quot;</value>
            <value>&quot;Brève, Journal télévisé, Document à base d&apos;archives&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Court métrage&quot;'>
            <value>&quot;Court métrage&quot;</value>
            <value>&quot;Court métrage, Animation&quot;</value>
            <value>&quot;Court métrage, Animation, Série&quot;</value>
            <value>&quot;Court métrage, Animation, Série, Interlude&quot;</value>
            <value>&quot;Court métrage, Interlude&quot;</value>
            <value>&quot;Court métrage, Série&quot;</value>
            <value>&quot;Court métrage, Téléfilm&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Création audiovisuell&quot;'>
            <value>&quot;Création audiovisuelle&quot;</value>
            <value>&quot;Création audiovisuelle, Documentaire&quot;</value>
            <value>&quot;Création audiovisuelle, Magazine&quot;</value>
            <value>&quot;Création audiovisuelle, Série&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Débat&quot;'>
            <value>&quot;Débat, Magazine&quot;</value>
            <value>&quot;Débat, Magazine, Interview entretien&quot;</value>
            <value>&quot;Débat, Magazine, Reportage&quot;</value>
            <value>&quot;Débat, Reportage, Magazine&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Document à base d&apos;archives&quot;'>
            <value>&quot;Document à base d&apos;archives&quot;</value>
            <value>&quot;Document à base d&apos;archives, Interview entretien, Magazine&quot;</value>
            <value>&quot;Document à base d&apos;archives, Journal télévisé&quot;</value>
            <value>&quot;Document à base d&apos;archives, Journal télévisé, Brève&quot;</value>
            <value>&quot;Document à base d&apos;archives, Journal télévisé, Interview, Reportage&quot;</value>
            <value>&quot;Document à base d&apos;archives, Journal télévisé, Reportage&quot;</value>
            <value>&quot;Document à base d&apos;archives, Magazine&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Documentaire&quot;'>
            <value>&quot;Documentaire&quot;</value>
            <value>&quot;Documentaire, Adaptation&quot;</value>
            <value>&quot;Documentaire, Document à base d&apos;archives&quot;</value>
            <value>&quot;Documentaire, Document à base d&apos;archives, Interview entretien&quot;</value>
            <value>&quot;Documentaire, Document à base d&apos;archives, Interview entretien, Série&quot;</value>
            <value>&quot;Documentaire, Document à base d&apos;archives, Série&quot;</value>
            <value>&quot;Documentaire, Interview entretien&quot;</value>
            <value>&quot;Documentaire, Interview entretien, Récit portrait&quot;</value>
            <value>&quot;Documentaire, Magazine&quot;</value>
            <value>&quot;Documentaire, Récit portrait&quot;</value>
            <value>&quot;Documentaire, Récit portrait, Série&quot;</value>
            <value>&quot;Documentaire, Reconstitution&quot;</value>
            <value>&quot;Documentaire, Série&quot;</value>
            <value>&quot;Documentaire, Série, Document à base d&apos;archives&quot;</value>
            <value>&quot;Documentaire, Témoignage, Document à base d&apos;archives&quot;</value>
            <value>&quot;Documentaire, Témoignage, Série&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Extrait&quot;'>
            <value>&quot;Extrait, Brève, Journal télévisé&quot;</value>
            <value>&quot;Extrait, Journal télévisé&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Feuilleton&quot;'>
            <value>&quot;Feuilleton&quot;</value>
            <value>&quot;Feuilleton, Adaptation&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Interview entretien&quot;'>
            <value>&quot;Interview entretien&quot;</value>
            <value>&quot;Interview entretien, Brève, Journal télévisé&quot;</value>
            <value>&quot;Interview entretien, Journal télévisé&quot;</value>
            <value>&quot;Interview entretien, Journal télévisé, Brève&quot;</value>
            <value>&quot;Interview entretien, Journal télévisé, Reportage&quot;</value>
            <value>&quot;Interview entretien, Magazine&quot;</value>
            <value>&quot;Interview entretien, Magazine, Débat&quot;</value>
            <value>&quot;Interview entretien, Magazine, Document à base d&apos;archives&quot;</value>
            <value>&quot;Interview entretien, Magazine, Reportage&quot;</value>
            <value>&quot;Interview entretien, Reportage, Journal télévisé&quot;</value>
            <value>&quot;Interview entretien, Reportage, Magazine&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Journal télévisé&quot;'>
            <value>&quot;Journal télévisé&quot;</value>
            <value>&quot;Journal télévisé, Animation&quot;</value>
            <value>&quot;Journal télévisé, Bande annonce&quot;</value>
            <value>&quot;Journal télévisé, Brève&quot;</value>
            <value>&quot;Journal télévisé, Brève, Journal télévisé&quot;</value>
            <value>&quot;Journal télévisé, Déclaration, Extrait&quot;</value>
            <value>&quot;Journal télévisé, Extrait&quot;</value>
            <value>&quot;Journal télévisé, Extrait, Interview entretien&quot;</value>
            <value>&quot;Journal télévisé, Extrait, Reportage&quot;</value>
            <value>&quot;Journal télévisé, Interview entretien&quot;</value>
            <value>&quot;Journal télévisé, Interview entretien, Document à base d&apos;archives&quot;</value>
            <value>&quot;Journal télévisé, Interview entretien, Reportage&quot;</value>
            <value>&quot;Journal télévisé, Magazine&quot;</value>
            <value>&quot;Journal télévisé, Plateau d&apos;analyse&quot;</value>
            <value>&quot;Journal télévisé, Plateau en situation&quot;</value>
            <value>&quot;Journal télévisé, Récit portrait&quot;</value>
            <value>&quot;Journal télévisé, Récit portrait, Document à base d&apos;archives&quot;</value>
            <value>&quot;Journal télévisé, Récit portrait, Interview entretien&quot;</value>
            <value>&quot;Journal télévisé, Reportage&quot;</value>
            <value>&quot;Journal télévisé, Reportage, Document à base d&apos;archives&quot;</value>
            <value>&quot;Journal télévisé, Reportage, Interview&quot;</value>
            <value>&quot;Journal télévisé, Reportage, Interview entretien&quot;</value>
            <value>&quot;Journal télévisé, Reportage, Journal télévisé&quot;</value>
            <value>&quot;Journal télévisé, Reportage, Micro trottoir&quot;</value>
            <value>&quot;Journal télévisé, Reportage, Plateau en situation&quot;</value>
            <value>&quot;Journal télévisé, Reportage, Témoignage&quot;</value>
            <value>&quot;Journal télévisé, Rétrospective, Document à base d&apos;archives&quot;</value>
            <value>&quot;Journal télévisé, Témoignage&quot;</value>
            <value>&quot;Journal télévisé, Tout images&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Long métrage&quot;'>
            <value>&quot;Long métrage&quot;</value>
            <value>&quot;Long métrage, Animation&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Magazine&quot;'>
            <value>&quot;Magazine&quot;</value>
            <value>&quot;Magazine, Animation&quot;</value>
            <value>&quot;Magazine, Bande annonce&quot;</value>
            <value>&quot;Magazine, Best of&quot;</value>
            <value>&quot;Magazine, Brève&quot;</value>
            <value>&quot;Magazine, Chronique&quot;</value>
            <value>&quot;Magazine, Court métrage&quot;</value>
            <value>&quot;Magazine, Débat&quot;</value>
            <value>&quot;Magazine, Débat, Best of&quot;</value>
            <value>&quot;Magazine, Débat, Interview entretien&quot;</value>
            <value>&quot;Magazine, Débat, Reportage&quot;</value>
            <value>&quot;Magazine, Débat, Reportage, Interview entretien&quot;</value>
            <value>&quot;Magazine, Document à base d&apos;archives&quot;</value>
            <value>&quot;Magazine, Documentaire&quot;</value>
            <value>&quot;Magazine, Extrait&quot;</value>
            <value>&quot;Magazine, Interview entretien&quot;</value>
            <value>&quot;Magazine, Interview entretien, Court métrage&quot;</value>
            <value>&quot;Magazine, Interview entretien, Débat&quot;</value>
            <value>&quot;Magazine, Interview entretien, Document à base d&apos;archives&quot;</value>
            <value>&quot;Magazine, Interview entretien, Extrait&quot;</value>
            <value>&quot;Magazine, Interview entretien, Oeuvre enregistrée en studio&quot;</value>
            <value>&quot;Magazine, Interview entretien, Reportage&quot;</value>
            <value>&quot;Magazine, Jeu&quot;</value>
            <value>&quot;Magazine, Journal télévisé&quot;</value>
            <value>&quot;Magazine, Micro trottoir&quot;</value>
            <value>&quot;Magazine, Plateau d&apos;analyse, Reportage&quot;</value>
            <value>&quot;Magazine, Programme à base de clips&quot;</value>
            <value>&quot;Magazine, Programme à base de clips, Jeu&quot;</value>
            <value>&quot;Magazine, Réalisation dans un lieu public&quot;</value>
            <value>&quot;Magazine, Reconstitution&quot;</value>
            <value>&quot;Magazine, Reconstitution, Témoignage&quot;</value>
            <value>&quot;Magazine, Reportage&quot;</value>
            <value>&quot;Magazine, Reportage, Débat&quot;</value>
            <value>&quot;Magazine, Reportage, Document à base d&apos;archives&quot;</value>
            <value>&quot;Magazine, Reportage, Interview entretien&quot;</value>
            <value>&quot;Magazine, Reportage, Interview entretien, Best of&quot;</value>
            <value>&quot;Magazine, Reportage, Interview entretien, Document à base d&apos;archives&quot;</value>
            <value>&quot;Magazine, Reportage, Récit portrait&quot;</value>
            <value>&quot;Magazine, Reportage, Reconstitution&quot;</value>
            <value>&quot;Magazine, Reportage, Tout images&quot;</value>
            <value>&quot;Magazine, Retransmission&quot;</value>
            <value>&quot;Magazine, Rétrospective&quot;</value>
            <value>&quot;Magazine, Sketch&quot;</value>
            <value>&quot;Magazine, Sketch, Document à base d&apos;archives, Interview entretien&quot;</value>
            <value>&quot;Magazine, Spectacle TV, Sketch&quot;</value>
            <value>&quot;Magazine, Télé achat&quot;</value>
            <value>&quot;Magazine, Tout images&quot;</value>
            <value>&quot;Magazine, Tranche horaire&quot;</value>
            <value>&quot;Magazine, Vidéo clip&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Micro trottoir&quot;'>
            <value>&quot;Micro trottoir, Journal télévisé&quot;</value>
            <value>&quot;Micro trottoir, Journal télévisé, Reportage&quot;</value>
            <value>&quot;Micro trottoir, Plateau en situation, Interview entretien, Journal télévisé, Reportage&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Récit portrait&quot;'>
            <value>&quot;Récit portrait, Best of, Documentaire, Interview entretien&quot;</value>
            <value>&quot;Récit portrait, Journal télévisé, Interview entretien&quot;</value>
            <value>&quot;Récit portrait, Reportage, Journal télévisé, Interview entretien&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Reportage&quot;'>
            <value>&quot;Reportage, Débat, Magazine&quot;</value>
            <value>&quot;Reportage, Document à base d&apos;archives, Journal télévisé&quot;</value>
            <value>&quot;Reportage, Interview entretien, Journal télévisé&quot;</value>
            <value>&quot;Reportage, Interview entretien, Magazine&quot;</value>
            <value>&quot;Reportage, Journal télévisé&quot;</value>
            <value>&quot;Reportage, Journal télévisé, Document à base d&apos;archives&quot;</value>
            <value>&quot;Reportage, Journal télévisé, Interview&quot;</value>
            <value>&quot;Reportage, Magazine&quot;</value>
            <value>&quot;Reportage, Magazine, Débat&quot;</value>
            <value>&quot;Reportage, Magazine, Interview entretien&quot;</value>
            <value>&quot;Reportage, Magazine, Interview entretien, Extrait&quot;</value>
            <value>&quot;Reportage, Magazine, Interview entretien, Extrait, Document à base d&apos;archives&quot;</value>
            <value>&quot;Reportage, Plateau en situation, Journal télévisé&quot;</value>
            <value>&quot;Reportage, Plateau en situation, Journal télévisé, Interview entretien&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Retrospective&quot;'>
            <value>&quot;Rétrospective, Animation, Journal télévisé&quot;</value>
            <value>&quot;Rétrospective, Journal télévisé&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Série, Série, Adaptation, Série, Adaptation, Animation et 4 en plus&quot;'>
            <value>&quot;Série&quot;</value>
            <value>&quot;Série, Adaptation&quot;</value>
            <value>&quot;Série, Adaptation, Animation&quot;</value>
            <value>&quot;Série, Animation&quot;</value>
            <value>&quot;Série, Animation, Adaptation&quot;</value>
            <value>&quot;Série, Animation, Série&quot;</value>
            <value>&quot;Série, Téléfilm&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Téléfilm&quot;'>
            <value>&quot;Téléfilm&quot;</value>
            <value>&quot;Téléfilm, Animation&quot;</value>
            <value>&quot;Téléfilm, Série&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Témoignage&quot;'>
            <value>&quot;Témoignage, Journal télévisé, Reportage&quot;</value>
            <value>&quot;Témoignage, Reportage, Journal télévisé&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Tranche horaire&quot;'>
            <value>&quot;Tranche horaire&quot;</value>
            <value>&quot;Tranche horaire, Adaptation&quot;</value>
            <value>&quot;Tranche horaire, Animation&quot;</value>
            <value>&quot;Tranche horaire, Court métrage&quot;</value>
            <value>&quot;Tranche horaire, Magazine&quot;</value>
            <value>&quot;Tranche horaire, Magazine, Débat&quot;</value>
            <value>&quot;Tranche horaire, Série&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Interview ]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[genre]' new-bin='true'>
          <bin default-name='true' value='&quot;Journal télévisé, Journal télévisé, Animation, Journal télévisé, Bande annonce et 26 en plus&quot;'>
            <value>&quot;Journal télévisé&quot;</value>
            <value>&quot;Journal télévisé, Animation&quot;</value>
            <value>&quot;Journal télévisé, Bande annonce&quot;</value>
            <value>&quot;Journal télévisé, Brève&quot;</value>
            <value>&quot;Journal télévisé, Brève, Journal télévisé&quot;</value>
            <value>&quot;Journal télévisé, Déclaration, Extrait&quot;</value>
            <value>&quot;Journal télévisé, Extrait&quot;</value>
            <value>&quot;Journal télévisé, Extrait, Interview entretien&quot;</value>
            <value>&quot;Journal télévisé, Extrait, Reportage&quot;</value>
            <value>&quot;Journal télévisé, Interview entretien&quot;</value>
            <value>&quot;Journal télévisé, Interview entretien, Document à base d&apos;archives&quot;</value>
            <value>&quot;Journal télévisé, Interview entretien, Reportage&quot;</value>
            <value>&quot;Journal télévisé, Magazine&quot;</value>
            <value>&quot;Journal télévisé, Plateau d&apos;analyse&quot;</value>
            <value>&quot;Journal télévisé, Plateau en situation&quot;</value>
            <value>&quot;Journal télévisé, Récit portrait&quot;</value>
            <value>&quot;Journal télévisé, Récit portrait, Document à base d&apos;archives&quot;</value>
            <value>&quot;Journal télévisé, Récit portrait, Interview entretien&quot;</value>
            <value>&quot;Journal télévisé, Reportage&quot;</value>
            <value>&quot;Journal télévisé, Reportage, Document à base d&apos;archives&quot;</value>
            <value>&quot;Journal télévisé, Reportage, Interview&quot;</value>
            <value>&quot;Journal télévisé, Reportage, Interview entretien&quot;</value>
            <value>&quot;Journal télévisé, Reportage, Journal télévisé&quot;</value>
            <value>&quot;Journal télévisé, Reportage, Micro trottoir&quot;</value>
            <value>&quot;Journal télévisé, Reportage, Plateau en situation&quot;</value>
            <value>&quot;Journal télévisé, Reportage, Témoignage&quot;</value>
            <value>&quot;Journal télévisé, Rétrospective, Document à base d&apos;archives&quot;</value>
            <value>&quot;Journal télévisé, Témoignage&quot;</value>
            <value>&quot;Journal télévisé, Tout images&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Magazine, Magazine, Animation, Magazine, Bande annonce et 46 en plus&quot;'>
            <value>&quot;Magazine&quot;</value>
            <value>&quot;Magazine, Animation&quot;</value>
            <value>&quot;Magazine, Bande annonce&quot;</value>
            <value>&quot;Magazine, Best of&quot;</value>
            <value>&quot;Magazine, Brève&quot;</value>
            <value>&quot;Magazine, Chronique&quot;</value>
            <value>&quot;Magazine, Court métrage&quot;</value>
            <value>&quot;Magazine, Débat&quot;</value>
            <value>&quot;Magazine, Débat, Best of&quot;</value>
            <value>&quot;Magazine, Débat, Interview entretien&quot;</value>
            <value>&quot;Magazine, Débat, Reportage&quot;</value>
            <value>&quot;Magazine, Débat, Reportage, Interview entretien&quot;</value>
            <value>&quot;Magazine, Document à base d&apos;archives&quot;</value>
            <value>&quot;Magazine, Documentaire&quot;</value>
            <value>&quot;Magazine, Extrait&quot;</value>
            <value>&quot;Magazine, Interview entretien&quot;</value>
            <value>&quot;Magazine, Interview entretien, Court métrage&quot;</value>
            <value>&quot;Magazine, Interview entretien, Débat&quot;</value>
            <value>&quot;Magazine, Interview entretien, Document à base d&apos;archives&quot;</value>
            <value>&quot;Magazine, Interview entretien, Extrait&quot;</value>
            <value>&quot;Magazine, Interview entretien, Oeuvre enregistrée en studio&quot;</value>
            <value>&quot;Magazine, Interview entretien, Reportage&quot;</value>
            <value>&quot;Magazine, Jeu&quot;</value>
            <value>&quot;Magazine, Journal télévisé&quot;</value>
            <value>&quot;Magazine, Micro trottoir&quot;</value>
            <value>&quot;Magazine, Plateau d&apos;analyse, Reportage&quot;</value>
            <value>&quot;Magazine, Programme à base de clips&quot;</value>
            <value>&quot;Magazine, Programme à base de clips, Jeu&quot;</value>
            <value>&quot;Magazine, Réalisation dans un lieu public&quot;</value>
            <value>&quot;Magazine, Reconstitution&quot;</value>
            <value>&quot;Magazine, Reconstitution, Témoignage&quot;</value>
            <value>&quot;Magazine, Reportage&quot;</value>
            <value>&quot;Magazine, Reportage, Débat&quot;</value>
            <value>&quot;Magazine, Reportage, Document à base d&apos;archives&quot;</value>
            <value>&quot;Magazine, Reportage, Interview entretien&quot;</value>
            <value>&quot;Magazine, Reportage, Interview entretien, Best of&quot;</value>
            <value>&quot;Magazine, Reportage, Interview entretien, Document à base d&apos;archives&quot;</value>
            <value>&quot;Magazine, Reportage, Récit portrait&quot;</value>
            <value>&quot;Magazine, Reportage, Reconstitution&quot;</value>
            <value>&quot;Magazine, Reportage, Tout images&quot;</value>
            <value>&quot;Magazine, Retransmission&quot;</value>
            <value>&quot;Magazine, Rétrospective&quot;</value>
            <value>&quot;Magazine, Sketch&quot;</value>
            <value>&quot;Magazine, Sketch, Document à base d&apos;archives, Interview entretien&quot;</value>
            <value>&quot;Magazine, Spectacle TV, Sketch&quot;</value>
            <value>&quot;Magazine, Télé achat&quot;</value>
            <value>&quot;Magazine, Tout images&quot;</value>
            <value>&quot;Magazine, Tranche horaire&quot;</value>
            <value>&quot;Magazine, Vidéo clip&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Séparer les mediamat' datatype='string' name='[Séparer les genre  (copie)_193091896165081088]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([mediamat], &quot;,&quot;) THEN&#13;&#10;    LEFT([mediamat], FIND([mediamat], &quot;,&quot;) - 1)&#13;&#10;ELSE&#13;&#10;    [mediamat]&#13;&#10;END' />
      </column>
      <column caption='séparer les public' datatype='string' name='[Séparer les genre  (copie)_193091896165986306]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([public], &quot;,&quot;) THEN&#13;&#10;    LEFT([public], FIND([public], &quot;,&quot;) - 1)&#13;&#10;ELSE&#13;&#10;    [public]&#13;&#10;END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Extract' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707]' role='measure' type='quantitative' />
      <column caption='Aud15' datatype='string' name='[aud15]' role='dimension' type='nominal' />
      <column caption='Aud' datatype='string' name='[aud]' role='dimension' type='nominal' />
      <column caption='Audf' datatype='string' name='[audf]' role='dimension' type='nominal' />
      <column caption='Audh' datatype='string' name='[audh]' role='dimension' type='nominal' />
      <column caption='Base' datatype='string' name='[base]' role='dimension' type='nominal' />
      <column caption='Base Id' datatype='string' name='[base_id]' role='dimension' type='nominal' />
      <column caption='Base Label' datatype='string' name='[base_label]' role='dimension' type='nominal' />
      <column caption='Ch' datatype='string' name='[ch]' role='dimension' type='nominal' />
      <column caption='Ch Code' datatype='string' name='[ch_code]' role='dimension' type='nominal' />
      <column caption='Chap' datatype='string' name='[chap]' role='dimension' type='nominal' />
      <column caption='Da' datatype='string' name='[da]' role='dimension' type='nominal' />
      <column caption='Datdif' datatype='date' datatype-customized='true' name='[datdif]' role='dimension' type='ordinal' />
      <column caption='Datdifsec' datatype='string' name='[datdifsec]' role='dimension' type='nominal' />
      <column caption='De' datatype='string' name='[de]' role='dimension' type='nominal' />
      <column caption='Des' datatype='string' name='[des]' role='dimension' type='nominal' />
      <column caption='Duree' datatype='string' name='[duree]' role='dimension' type='nominal' />
      <column caption='Dureemin' datatype='string' name='[dureemin]' role='dimension' type='nominal' />
      <column caption='Gen' datatype='string' name='[gen]' role='dimension' type='nominal' />
      <column caption='Genre' datatype='string' name='[genre]' role='dimension' type='nominal' />
      <column caption='Gens' datatype='string' name='[gens]' role='dimension' type='nominal' />
      <column caption='Heure' datatype='datetime' name='[heure]' role='dimension' type='ordinal' />
      <column caption='Heuremin' datatype='string' name='[heuremin]' role='dimension' type='nominal' />
      <column caption='Jour' datatype='string' name='[jour]' role='dimension' type='nominal' />
      <column caption='Liensom' datatype='string' name='[liensom]' role='dimension' type='nominal' />
      <column caption='Lieu' datatype='string' name='[lieu]' role='dimension' type='nominal' />
      <column caption='Mediamat' datatype='string' name='[mediamat]' role='dimension' type='nominal' />
      <column caption='Notice' datatype='string' name='[no1]' role='dimension' type='nominal' />
      <column caption='No' datatype='string' name='[no]' role='dimension' type='nominal' />
      <column caption='Pays' datatype='string' name='[pays]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Pdm15' datatype='string' name='[pdm15]' role='dimension' type='nominal' />
      <column caption='Pdm' datatype='string' name='[pdm]' role='dimension' type='nominal' />
      <column caption='Periode' datatype='string' name='[periode]' role='dimension' type='nominal' />
      <column caption='Prod' datatype='string' name='[prod]' role='dimension' type='nominal' />
      <column caption='Public' datatype='string' name='[public]' role='dimension' type='nominal' />
      <column caption='Res' datatype='string' name='[res]' role='dimension' type='nominal' />
      <column caption='Resprod' datatype='string' name='[resprod]' role='dimension' type='nominal' />
      <column caption='Seq' datatype='string' name='[seq]' role='dimension' type='nominal' />
      <column caption='Som' datatype='string' name='[som]' role='dimension' type='nominal' />
      <column caption='Sp' datatype='string' name='[sp]' role='dimension' type='nominal' />
      <column caption='Ti' datatype='string' name='[ti]' role='dimension' type='nominal' />
      <column caption='Ticol' datatype='string' name='[ticol]' role='dimension' type='nominal' />
      <column caption='Tiprog' datatype='string' name='[tiprog]' role='dimension' type='nominal' />
      <column caption='Typdescr' datatype='string' name='[typdescr]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;FR&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Extract' id='Extract (Extract.Extract)_6627857D238E4BC6B82F6510641D1707'>
            <properties context=''>
              <relation connection='hyper.19tgq181t70c9c1env1v605eb906' name='Extract' table='[Extract].[Extract]' type='table'>
                <columns>
                  <column datatype='date' date-parse-format='yyyy-MM-' name='datdif' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Filtre ovni extraterrestre + rech et tem'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extrait corpus11_ovni+ (Connexions multiples)' name='federated.0r57vmr1pu8w6q1cnzvqg1j81pez' />
          </datasources>
          <datasource-dependencies datasource='federated.0r57vmr1pu8w6q1cnzvqg1j81pez'>
            <column caption='Filtre par desc' datatype='string' name='[Calculation_696650629407948801]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([res]) AND ISNULL([resprod]) THEN &quot;Non&quot; ELSE &quot;Oui&quot; END' />
            </column>
            <column caption='Ch' datatype='string' name='[ch]' role='dimension' type='nominal' />
            <column caption='Datdif' datatype='date' datatype-customized='true' name='[datdif]' role='dimension' type='ordinal' />
            <column caption='De' datatype='string' name='[de]' role='dimension' type='nominal' />
            <column caption='Notice' datatype='string' name='[no1]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_696650629407948801]' derivation='None' name='[none:Calculation_696650629407948801:nk]' pivot='key' type='nominal' />
            <column-instance column='[ch]' derivation='None' name='[none:ch:nk]' pivot='key' type='nominal' />
            <column-instance column='[de]' derivation='None' name='[none:de:nk]' pivot='key' type='nominal' />
            <column-instance column='[no1]' derivation='None' name='[none:no1:nk]' pivot='key' type='nominal' />
            <column-instance column='[res]' derivation='None' name='[none:res:nk]' pivot='key' type='nominal' />
            <column-instance column='[resprod]' derivation='None' name='[none:resprod:nk]' pivot='key' type='nominal' />
            <column caption='Res' datatype='string' name='[res]' role='dimension' type='nominal' />
            <column caption='Resprod' datatype='string' name='[resprod]' role='dimension' type='nominal' />
            <column-instance column='[datdif]' derivation='Year' name='[yr:datdif:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Calculation_696650629407948801:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_696650629407948801:nk]' member='&quot;Oui&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:ch:nk]'>
            <groupfilter function='level-members' level='[none:ch:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:de:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:de:nk]' member='&quot;extraterrestre&quot;' />
              <groupfilter function='member' level='[none:de:nk]' member='&quot;ovni&quot;' />
              <groupfilter function='member' level='[none:de:nk]' member='&quot;recherche scientifique&quot;' />
              <groupfilter function='member' level='[none:de:nk]' member='&quot;témoignage&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[yr:datdif:ok]' filter-group='3'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:datdif:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:datdif:ok]' member='1954' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1958' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1965' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1966' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1967' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1968' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1969' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1971' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1972' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1973' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1974' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1975' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1976' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1977' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1978' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1979' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1980' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1981' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1982' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1983' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1984' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1985' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1986' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1987' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1988' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1989' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1990' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1991' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1992' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1993' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:de:nk]</column>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[yr:datdif:ok]</column>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Calculation_696650629407948801:nk]</column>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:ch:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
          </pane>
        </panes>
        <rows>([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:no1:nk] / ([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:de:nk] / ([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:resprod:nk] / ([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:res:nk] / [federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:ch:nk]))))</rows>
        <cols />
      </table>
      <simple-id uuid='{7F95400A-4C7A-4412-AF32-6AA0332BE04D}' />
    </worksheet>
    <worksheet name='Genre et notice, filtre minimum 100 '>
      <table>
        <view>
          <datasources>
            <datasource caption='Extrait corpus11_ovni+ (Connexions multiples)' name='federated.0r57vmr1pu8w6q1cnzvqg1j81pez' />
          </datasources>
          <datasource-dependencies datasource='federated.0r57vmr1pu8w6q1cnzvqg1j81pez'>
            <column caption='Séparer les genre ' datatype='string' name='[Calculation_696650629425852419]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([genre], &quot;,&quot;) THEN&#13;&#10;    LEFT([genre], FIND([genre], &quot;,&quot;) - 1)&#13;&#10;ELSE&#13;&#10;    [genre]&#13;&#10;END' />
            </column>
            <column-instance column='[no1]' derivation='Count' name='[cnt:no1:qk]' pivot='key' type='quantitative' />
            <column caption='Genre' datatype='string' name='[genre]' role='dimension' type='nominal' />
            <column caption='Notice' datatype='string' name='[no1]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_696650629425852419]' derivation='None' name='[none:Calculation_696650629425852419:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Calculation_696650629425852419:nk]'>
            <groupfilter expression='COUNT([no1]) &gt;= 100' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Calculation_696650629425852419:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Calculation_696650629425852419:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[cnt:no1:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Calculation_696650629425852419:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Calculation_696650629425852419:nk]</rows>
        <cols>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[cnt:no1:qk]</cols>
      </table>
      <simple-id uuid='{666FCD0F-FB65-4EEE-B992-109F01702AAF}' />
    </worksheet>
    <worksheet name='Notice recherche ovni et ext'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extrait corpus11_ovni+ (Connexions multiples)' name='federated.0r57vmr1pu8w6q1cnzvqg1j81pez' />
          </datasources>
          <datasource-dependencies datasource='federated.0r57vmr1pu8w6q1cnzvqg1j81pez'>
            <column caption='Filtre par desc' datatype='string' name='[Calculation_696650629407948801]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([res]) AND ISNULL([resprod]) THEN &quot;Non&quot; ELSE &quot;Oui&quot; END' />
            </column>
            <column caption='Datdif' datatype='date' datatype-customized='true' name='[datdif]' role='dimension' type='ordinal' />
            <column caption='De' datatype='string' name='[de]' role='dimension' type='nominal' />
            <column caption='Duree' datatype='string' name='[duree]' role='dimension' type='nominal' />
            <column caption='Notice' datatype='string' name='[no1]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_696650629407948801]' derivation='None' name='[none:Calculation_696650629407948801:nk]' pivot='key' type='nominal' />
            <column-instance column='[de]' derivation='None' name='[none:de:nk]' pivot='key' type='nominal' />
            <column-instance column='[duree]' derivation='None' name='[none:duree:nk]' pivot='key' type='nominal' />
            <column-instance column='[no1]' derivation='None' name='[none:no1:nk]' pivot='key' type='nominal' />
            <column-instance column='[res]' derivation='None' name='[none:res:nk]' pivot='key' type='nominal' />
            <column-instance column='[resprod]' derivation='None' name='[none:resprod:nk]' pivot='key' type='nominal' />
            <column-instance column='[typdescr]' derivation='None' name='[none:typdescr:nk]' pivot='key' type='nominal' />
            <column caption='Res' datatype='string' name='[res]' role='dimension' type='nominal' />
            <column caption='Resprod' datatype='string' name='[resprod]' role='dimension' type='nominal' />
            <column caption='Typdescr' datatype='string' name='[typdescr]' role='dimension' type='nominal' />
            <column-instance column='[datdif]' derivation='Year' name='[yr:datdif:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Calculation_696650629407948801:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_696650629407948801:nk]' member='&quot;Oui&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:de:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:de:nk]' member='&quot;extraterrestre&quot;' />
              <groupfilter function='member' level='[none:de:nk]' member='&quot;ovni&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:no1:nk]'>
            <groupfilter function='level-members' level='[none:no1:nk]' user:ui-manual-selection='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[yr:datdif:ok]' filter-group='3'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:datdif:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:datdif:ok]' member='1954' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1958' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1965' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1966' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1967' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1968' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1969' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1971' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1972' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1973' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1974' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1975' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1976' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1977' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1978' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1979' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1980' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1981' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1982' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1983' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1984' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1985' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1986' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1987' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1988' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1989' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1990' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1991' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1992' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1993' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[yr:datdif:ok]</column>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:no1:nk]</column>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:de:nk]</column>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Calculation_696650629407948801:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:no1:nk] / ([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:typdescr:nk] / ([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:duree:nk] / ([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:res:nk] / [federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:resprod:nk]))))</rows>
        <cols />
      </table>
      <simple-id uuid='{5C0535B3-8D44-4B39-9C67-734D68BB100B}' />
    </worksheet>
    <worksheet name='Notice recherche scientifique et témoignage'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extrait corpus11_ovni+ (Connexions multiples)' name='federated.0r57vmr1pu8w6q1cnzvqg1j81pez' />
          </datasources>
          <datasource-dependencies datasource='federated.0r57vmr1pu8w6q1cnzvqg1j81pez'>
            <column caption='Filtre par desc' datatype='string' name='[Calculation_696650629407948801]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([res]) AND ISNULL([resprod]) THEN &quot;Non&quot; ELSE &quot;Oui&quot; END' />
            </column>
            <column caption='Datdif' datatype='date' datatype-customized='true' name='[datdif]' role='dimension' type='ordinal' />
            <column caption='De' datatype='string' name='[de]' role='dimension' type='nominal' />
            <column caption='Duree' datatype='string' name='[duree]' role='dimension' type='nominal' />
            <column caption='Notice' datatype='string' name='[no1]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_696650629407948801]' derivation='None' name='[none:Calculation_696650629407948801:nk]' pivot='key' type='nominal' />
            <column-instance column='[de]' derivation='None' name='[none:de:nk]' pivot='key' type='nominal' />
            <column-instance column='[duree]' derivation='None' name='[none:duree:nk]' pivot='key' type='nominal' />
            <column-instance column='[no1]' derivation='None' name='[none:no1:nk]' pivot='key' type='nominal' />
            <column-instance column='[res]' derivation='None' name='[none:res:nk]' pivot='key' type='nominal' />
            <column-instance column='[resprod]' derivation='None' name='[none:resprod:nk]' pivot='key' type='nominal' />
            <column-instance column='[typdescr]' derivation='None' name='[none:typdescr:nk]' pivot='key' type='nominal' />
            <column caption='Res' datatype='string' name='[res]' role='dimension' type='nominal' />
            <column caption='Resprod' datatype='string' name='[resprod]' role='dimension' type='nominal' />
            <column caption='Typdescr' datatype='string' name='[typdescr]' role='dimension' type='nominal' />
            <column-instance column='[datdif]' derivation='Year' name='[yr:datdif:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Calculation_696650629407948801:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_696650629407948801:nk]' member='&quot;Oui&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:de:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:de:nk]' member='&quot;recherche scientifique&quot;' />
              <groupfilter function='member' level='[none:de:nk]' member='&quot;témoignage&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:no1:nk]'>
            <groupfilter function='level-members' level='[none:no1:nk]' user:ui-manual-selection='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[yr:datdif:ok]' filter-group='3'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:datdif:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:datdif:ok]' member='1954' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1958' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1965' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1966' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1967' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1968' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1969' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1971' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1972' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1973' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1974' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1975' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1976' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1977' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1978' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1979' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1980' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1981' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1982' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1983' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1984' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1985' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1986' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1987' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1988' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1989' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1990' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1991' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1992' />
                <groupfilter function='member' level='[yr:datdif:ok]' member='1993' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[yr:datdif:ok]</column>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:no1:nk]</column>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:de:nk]</column>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Calculation_696650629407948801:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:no1:nk] / ([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:typdescr:nk] / ([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:duree:nk] / ([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:res:nk] / [federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:resprod:nk]))))</rows>
        <cols />
      </table>
      <simple-id uuid='{D7CFD441-4E10-4ACE-9B48-06B659AF65D7}' />
    </worksheet>
    <worksheet name='data pour iramuteq'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extrait corpus11_ovni+ (Connexions multiples)' name='federated.0r57vmr1pu8w6q1cnzvqg1j81pez' />
          </datasources>
          <datasource-dependencies datasource='federated.0r57vmr1pu8w6q1cnzvqg1j81pez'>
            <column caption='choix res ou resprod' datatype='string' name='[Calculation_193091896168726532]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([res]) AND ISNULL([resprod]) THEN NULL&#13;&#10;ELSEIF ISNULL([res]) THEN [resprod]&#13;&#10;ELSEIF ISNULL([resprod]) THEN [res]&#13;&#10;ELSE [res]&#13;&#10;END' />
            </column>
            <column caption='keyword sans parenthese et que le premier' datatype='string' name='[Calculation_193091896178548741]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_EXTRACT([de], &apos;([^()]*)&apos;)' />
            </column>
            <column caption='Séparer les mediamat' datatype='string' name='[Séparer les genre  (copie)_193091896165081088]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([mediamat], &quot;,&quot;) THEN&#13;&#10;    LEFT([mediamat], FIND([mediamat], &quot;,&quot;) - 1)&#13;&#10;ELSE&#13;&#10;    [mediamat]&#13;&#10;END' />
            </column>
            <column caption='séparer les public' datatype='string' name='[Séparer les genre  (copie)_193091896165986306]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([public], &quot;,&quot;) THEN&#13;&#10;    LEFT([public], FIND([public], &quot;,&quot;) - 1)&#13;&#10;ELSE&#13;&#10;    [public]&#13;&#10;END' />
            </column>
            <column caption='Base Id' datatype='string' name='[base_id]' role='dimension' type='nominal' />
            <column caption='Ch' datatype='string' name='[ch]' role='dimension' type='nominal' />
            <column caption='Datdif' datatype='date' datatype-customized='true' name='[datdif]' role='dimension' type='ordinal' />
            <column caption='De' datatype='string' name='[de]' role='dimension' type='nominal' />
            <column caption='Mediamat' datatype='string' name='[mediamat]' role='dimension' type='nominal' />
            <column caption='Notice' datatype='string' name='[no1]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_193091896168726532]' derivation='None' name='[none:Calculation_193091896168726532:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_193091896178548741]' derivation='None' name='[none:Calculation_193091896178548741:nk]' pivot='key' type='nominal' />
            <column-instance column='[Séparer les genre  (copie)_193091896165081088]' derivation='None' name='[none:Séparer les genre  (copie)_193091896165081088:nk]' pivot='key' type='nominal' />
            <column-instance column='[Séparer les genre  (copie)_193091896165986306]' derivation='None' name='[none:Séparer les genre  (copie)_193091896165986306:nk]' pivot='key' type='nominal' />
            <column-instance column='[base_id]' derivation='None' name='[none:base_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[ch]' derivation='None' name='[none:ch:nk]' pivot='key' type='nominal' />
            <column-instance column='[datdif]' derivation='None' name='[none:datdif:qk]' pivot='key' type='quantitative' />
            <column-instance column='[de]' derivation='None' name='[none:de:nk]' pivot='key' type='nominal' />
            <column-instance column='[no1]' derivation='None' name='[none:no1:nk]' pivot='key' type='nominal' />
            <column-instance column='[res]' derivation='None' name='[none:res:nk]' pivot='key' type='nominal' />
            <column-instance column='[resprod]' derivation='None' name='[none:resprod:nk]' pivot='key' type='nominal' />
            <column-instance column='[typdescr]' derivation='None' name='[none:typdescr:nk]' pivot='key' type='nominal' />
            <column caption='Public' datatype='string' name='[public]' role='dimension' type='nominal' />
            <column caption='Res' datatype='string' name='[res]' role='dimension' type='nominal' />
            <column caption='Resprod' datatype='string' name='[resprod]' role='dimension' type='nominal' />
            <column caption='Typdescr' datatype='string' name='[typdescr]' role='dimension' type='nominal' />
            <column-instance column='[datdif]' derivation='Year' name='[yr:datdif:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Séparer les genre  (copie)_193091896165081088:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Séparer les genre  (copie)_193091896165081088:nk]' />
              <groupfilter function='member' level='[none:Séparer les genre  (copie)_193091896165081088:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Séparer les genre  (copie)_193091896165986306:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Séparer les genre  (copie)_193091896165986306:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Séparer les genre  (copie)_193091896165986306:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Séparer les genre  (copie)_193091896165986306:nk]' member='&quot;A&quot;' />
                <groupfilter function='member' level='[none:Séparer les genre  (copie)_193091896165986306:nk]' member='&quot;B&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:datdif:qk]' included-values='in-range'>
            <min>#1994-01-01#</min>
            <max>#2023-12-31#</max>
          </filter>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:de:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:de:nk]' />
              <groupfilter function='member' level='[none:de:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:res:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:res:nk]' />
              <groupfilter function='empty-level' member='[none:res:nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:resprod:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:resprod:nk]' />
              <groupfilter function='member' level='[none:resprod:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:typdescr:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:typdescr:nk]' />
              <groupfilter function='member' level='[none:typdescr:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:datdif:qk]</column>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Séparer les genre  (copie)_193091896165081088:nk]</column>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Séparer les genre  (copie)_193091896165986306:nk]</column>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:typdescr:nk]</column>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:res:nk]</column>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:resprod:nk]</column>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:de:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
          </pane>
        </panes>
        <rows>([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:no1:nk] / ([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Calculation_193091896178548741:nk] / ([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:base_id:nk] / ([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:ch:nk] / ([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[yr:datdif:ok] / ([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Séparer les genre  (copie)_193091896165081088:nk] / ([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Séparer les genre  (copie)_193091896165986306:nk] / ([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:typdescr:nk] / [federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Calculation_193091896168726532:nk]))))))))</rows>
        <cols />
      </table>
      <simple-id uuid='{33E2B485-7317-448C-BBCE-67A21B86139A}' />
    </worksheet>
    <worksheet name='data pour iramuteq (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extrait corpus11_ovni+ (Connexions multiples)' name='federated.0r57vmr1pu8w6q1cnzvqg1j81pez' />
          </datasources>
          <datasource-dependencies datasource='federated.0r57vmr1pu8w6q1cnzvqg1j81pez'>
            <column caption='choix res ou resprod' datatype='string' name='[Calculation_193091896168726532]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([res]) AND ISNULL([resprod]) THEN NULL&#13;&#10;ELSEIF ISNULL([res]) THEN [resprod]&#13;&#10;ELSEIF ISNULL([resprod]) THEN [res]&#13;&#10;ELSE [res]&#13;&#10;END' />
            </column>
            <column caption='keyword sans parenthese et que le premier' datatype='string' name='[Calculation_193091896178548741]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_EXTRACT([de], &apos;([^()]*)&apos;)' />
            </column>
            <column caption='Séparer les mediamat' datatype='string' name='[Séparer les genre  (copie)_193091896165081088]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([mediamat], &quot;,&quot;) THEN&#13;&#10;    LEFT([mediamat], FIND([mediamat], &quot;,&quot;) - 1)&#13;&#10;ELSE&#13;&#10;    [mediamat]&#13;&#10;END' />
            </column>
            <column caption='séparer les public' datatype='string' name='[Séparer les genre  (copie)_193091896165986306]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([public], &quot;,&quot;) THEN&#13;&#10;    LEFT([public], FIND([public], &quot;,&quot;) - 1)&#13;&#10;ELSE&#13;&#10;    [public]&#13;&#10;END' />
            </column>
            <column caption='Base Id' datatype='string' name='[base_id]' role='dimension' type='nominal' />
            <column caption='Ch' datatype='string' name='[ch]' role='dimension' type='nominal' />
            <column caption='Datdif' datatype='date' datatype-customized='true' name='[datdif]' role='dimension' type='ordinal' />
            <column caption='De' datatype='string' name='[de]' role='dimension' type='nominal' />
            <column caption='Mediamat' datatype='string' name='[mediamat]' role='dimension' type='nominal' />
            <column caption='Notice' datatype='string' name='[no1]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_193091896168726532]' derivation='None' name='[none:Calculation_193091896168726532:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_193091896178548741]' derivation='None' name='[none:Calculation_193091896178548741:nk]' pivot='key' type='nominal' />
            <column-instance column='[Séparer les genre  (copie)_193091896165081088]' derivation='None' name='[none:Séparer les genre  (copie)_193091896165081088:nk]' pivot='key' type='nominal' />
            <column-instance column='[Séparer les genre  (copie)_193091896165986306]' derivation='None' name='[none:Séparer les genre  (copie)_193091896165986306:nk]' pivot='key' type='nominal' />
            <column-instance column='[base_id]' derivation='None' name='[none:base_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[ch]' derivation='None' name='[none:ch:nk]' pivot='key' type='nominal' />
            <column-instance column='[datdif]' derivation='None' name='[none:datdif:qk]' pivot='key' type='quantitative' />
            <column-instance column='[de]' derivation='None' name='[none:de:nk]' pivot='key' type='nominal' />
            <column-instance column='[no1]' derivation='None' name='[none:no1:nk]' pivot='key' type='nominal' />
            <column-instance column='[res]' derivation='None' name='[none:res:nk]' pivot='key' type='nominal' />
            <column-instance column='[resprod]' derivation='None' name='[none:resprod:nk]' pivot='key' type='nominal' />
            <column-instance column='[typdescr]' derivation='None' name='[none:typdescr:nk]' pivot='key' type='nominal' />
            <column caption='Public' datatype='string' name='[public]' role='dimension' type='nominal' />
            <column caption='Res' datatype='string' name='[res]' role='dimension' type='nominal' />
            <column caption='Resprod' datatype='string' name='[resprod]' role='dimension' type='nominal' />
            <column caption='Typdescr' datatype='string' name='[typdescr]' role='dimension' type='nominal' />
            <column-instance column='[datdif]' derivation='Year' name='[yr:datdif:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Séparer les genre  (copie)_193091896165081088:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Séparer les genre  (copie)_193091896165081088:nk]' />
              <groupfilter function='member' level='[none:Séparer les genre  (copie)_193091896165081088:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Séparer les genre  (copie)_193091896165986306:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Séparer les genre  (copie)_193091896165986306:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Séparer les genre  (copie)_193091896165986306:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Séparer les genre  (copie)_193091896165986306:nk]' member='&quot;A&quot;' />
                <groupfilter function='member' level='[none:Séparer les genre  (copie)_193091896165986306:nk]' member='&quot;B&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:datdif:qk]' included-values='in-range'>
            <min>#1994-01-01#</min>
            <max>#2023-12-31#</max>
          </filter>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:de:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:de:nk]' />
              <groupfilter function='member' level='[none:de:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:res:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:res:nk]' />
              <groupfilter function='empty-level' member='[none:res:nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:resprod:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:resprod:nk]' />
              <groupfilter function='member' level='[none:resprod:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:typdescr:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:typdescr:nk]' />
              <groupfilter function='member' level='[none:typdescr:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:datdif:qk]</column>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Séparer les genre  (copie)_193091896165081088:nk]</column>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Séparer les genre  (copie)_193091896165986306:nk]</column>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:typdescr:nk]</column>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:res:nk]</column>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:resprod:nk]</column>
            <column>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:de:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
          </pane>
        </panes>
        <rows>([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:no1:nk] / ([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Calculation_193091896178548741:nk] / ([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:base_id:nk] / ([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:ch:nk] / ([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[yr:datdif:ok] / ([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Séparer les genre  (copie)_193091896165081088:nk] / ([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Séparer les genre  (copie)_193091896165986306:nk] / ([federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:typdescr:nk] / [federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Calculation_193091896168726532:nk]))))))))</rows>
        <cols />
      </table>
      <simple-id uuid='{29DD581F-68D2-455A-96CC-1B878F94B0E7}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Filtre ovni extraterrestre + rech et tem'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card param='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:ch:nk]' type='filter' />
            <card param='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:de:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[:Measure Names]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:ch:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:ch_code:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:de:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:no1:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:res:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:resprod:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16C876EC-736C-4228-B4F1-174FD1418FD1}' />
    </window>
    <window class='worksheet' name='Notice recherche scientifique et témoignage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='typeinlist' param='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:de:nk]' type='filter' />
            <card mode='typeinlist' param='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:no1:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Calculation_696650629359271936:qk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Calculation_696650629407948801:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:aud:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:base_id:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:da:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:de:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:des:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:duree:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:genre:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:no1:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:res:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:resprod:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:seq:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:ticol:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:typdescr:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[yr:datdif:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{03B24323-46F4-45D5-B42D-3D387843935C}' />
    </window>
    <window class='worksheet' name='Notice recherche ovni et ext'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='typeinlist' param='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:de:nk]' type='filter' />
            <card mode='typeinlist' param='[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:no1:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Calculation_696650629359271936:qk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Calculation_696650629407948801:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:aud:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:base_id:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:da:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:de:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:des:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:duree:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:genre:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:no1:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:res:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:resprod:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:seq:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:ticol:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:typdescr:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[yr:datdif:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{300125EF-D9D2-4EA2-99B2-50D4D7A4EA32}' />
    </window>
    <window class='worksheet' name='Genre et notice, filtre minimum 100 '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Calculation_696650629425852419:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7173EDEA-5382-4363-B2ED-A5B842AC2B8A}' />
    </window>
    <window class='worksheet' name='data pour iramuteq'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Calculation_193091896166891523:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Calculation_193091896168726532:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Calculation_193091896178548741:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Séparer les genre  (copie)_193091896165081088:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:Séparer les genre  (copie)_193091896165986306:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:base_id:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:ch:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:datdif:qk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:de:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:no1:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:res:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:resprod:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[none:typdescr:nk]</field>
            <field>[federated.0r57vmr1pu8w6q1cnzvqg1j81pez].[yr:datdif:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BC426DDD-E14E-4081-B7C4-D63D337F7994}' />
    </window>
    <window class='worksheet' maximized='true' name='data pour iramuteq (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F1A2BCE3-8414-405D-9D85-A1897B841CE9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Filtre ovni extraterrestre + rech et tem' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Genre et notice, filtre minimum 100 ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dV3SbZ57f8e/b0EEAJMEqkpJIiSoURfVCqlmWXNZldryT2T3JJDm5yUXa
      yV1ObnKRk1wnuco5uUpydtczk9lptnc0tmxVipIoimKvYu8FBIiOt+RCku2ZlccmzQKRz+eK
      IgG8f0D44Xme93nwvJJlWRaCsE3Jm12AIGwmEQBhWxMBELY1EQBhWxMBELY1EQBhWxMBELY1
      EQBhWxMBELY1EQBhWxMBELY1EQBhWxMBELY1EQBhWxMBELY1EYAVsiyLbP4KhWmam13CN8rG
      2kQAViGTyWx2Cd8onU5vdgnfKBtrUze7gFfRxPwy4/PRzS7jpTKZDJqmbXYZL5WNtYkArMKj
      3kn+76edm12GsAZeiS5Qam6QW03txIxn/16eHeTGrVZSm1uWsAW8EgFIh0LMLk8xPRcHYGK8
      g6H+eb5/TzxJX1MbS9/7cYRX1SvSBZLIDwQJLc1BgZ/FkI38fCeQpv3mp7SPL5FXeZRLx/ey
      PN7FjaY2krKf4+fOUKRPcb2xlbQWoOHyVeTxRq63jJBKSTS8/yYZZGxA773PGAxFWAhrXHz7
      dQoIcevGbZbI5dS5espzXZv9Igjr4JVoAQACRXnE58NEp4Ywd+zDpwAoOLxuPG4H/e1tLIUm
      ePI0xuU//ysaDheQDKeR7Q5yvDnI6WmedIxTdPA8f/mD16g5cpwKv0ZofgkDiEeT7K9/iz+r
      K2IuukzP3ZuMJVSMpTEanwxs8rMX1ssr0gKAZM9jl7Of650uTtWX0NcPxEYYXMql4cIBWm49
      IpPJIDndOFVY1A0sKUNf/zhVdWfQUoO0D6WIh6fofbpM3eG92NXYl49vd/rx+5xoC3Zk2SJt
      5XD6whnK3BIp07Z5T1xYV69EAGTVhiYr5JUXYUxF8Nsd2J12JHs+jlgz137fj83uQ/EEKZaa
      +PnftmGpNg7UVVDgV7n7xae4i3zkOIL0PrjOw6E0XR3tnHzzAg6nHQnQ7Hbk58eyKU5215Xz
      yWcf06o5qTzSQL7fvdkvg7AOpC21M5weo/3hfQZnIliam2OnGijPd67pISzL4hc3OsRp0C1i
      awXAMkmnkqQyBrJqw+mwIUvS2h7CsrjbNsyttvE1fdy1YpomspydQ7tsrG1rBWADWJZFJpPB
      ZsvOcUEymcThcGx2GS+VjbVlVxwFYYO9EoPgbDO9GGU6lNjsMl4qnU5nbeuUjbWJAKzCg+4J
      MQjeItapC5RgdHRuzR/VSKcYGRlB/8Zl5SbzQ92Mh9MkwwuMzsw//73F8mQfT2fjrGzAYzDe
      38V8XP8+ZQtZbB0DMP/tN1shI5NidHQE48W7eLadByNfdUX0WIiJhErQrZKOLDL2PABmKsLw
      gklh4B8OwPTULG0tw7zsLZ4OTbJADj67subPRcgO69sFsgyett7mYc8UgV11XDyxg76WSapO
      VBMffcqSzYt9eYmYHmJwUqGu3Env9DDT48vsPHKOw8UKTbdvMhGBw+feoDr3q1OaRipO443r
      3J9vZmTnAf7stWqeNN5hZAlcecUUvChBj9PWdIfu6QTkFBKUZkk7dlAe1BjsHCSvKoCkqGQi
      M9y5dZPJmIMzV66wQ4tw69Y9luRc8vLz2fGS8AivvvU9CxTpp30+l3c/+CEVqUG6F+IszCyi
      A6nlCOF4gujsCOPLTs6dO4K1NI+z7Cjvv3MFKzyJKWl4/bkEvNDe1EH8aw+t2F2cO3ee02/+
      mB+9fZyZ1nv0L+q4lDRNjQ9IGgAWCz0PaZmI4XHI3L93F8tSGZ+eIrMwyKTpx2HFmZ+Lsrw0
      y1LGy5HjdQTd0H3nBpOGA2l5ksYnfev6MgmbZ21bAMvCsCyM5TBRw4CMieR0oyoKbqdCRAcs
      E8s0iceW0e25oPmoOVSNxyYTwUlBkR+blcFuV5mZHsJyVXCisozmu5Mv76akU5iWRiKjUl17
      jKoCD7qlYIs/6/4kExa7auo4VJqHbkCeX2NspJOOtMquPTuReNaFyincxZljbkYGWrgfr8Nr
      uKk7cYJSp4Qui5WgW9XatgB6gtZbH/GzTx5RVF4EuXsoSbTz8w8/pGkuh+p8H0FviF/87c94
      NDAHioyi2VDlZ10bWdNQJAmQUFUVr9vNRN8DbrcMYmkqsiT94VfqcgpYfPQRv/x9KyX7dzHe
      eoffXfuM7tEFLElBVVUK91UR62nmd7+7RuvgNKbkYU9Qp3sBcl0OJEnBZlNJR+doeXCfvpk0
      +T4/e2t30PH5Na59dpOh2eU1fZmE7CFmgldIrAXaWsQ8wCoU+N3UVRVtdhkvlY3rbV7IxtpE
      C7BCYi3Q6mVjbdkVR0HYYKILtApzS3HmIoubXcZLZdJptCxtnV7UVhhwU5zn3exyABGAVbnX
      OSYGwd/DBxf280/fOLzZZQAbGIDUwjC3W/qwVCd7ao5Qke9hjb+rIggrtmFjgNTcFI6dBzlY
      VULfvRuMLW/kPpFpeprbib30bybjnR1MLmfn8mZhfW1gF0ghJzdISZ5Gnhri1mCIoj0Sd7+4
      yazu5dS5c1Tkqjy5dY2uGZ3as2dR50JUHN1P8mkn4dxKcua7aOqfIByX2FMWYHhwhLJjVzm+
      203nvc/pnDKoPdPAQW+Em50TLI6P4qqooyYvzOc37uHobuXoxXfwz3fQ2DlCoOIQ58/UYKgq
      TklmrqebRS3B+KjMiZOlNF//gkU5j7PnGijx2TfupRI2zCacBZKwu91k4lGGmpvJPfE2712o
      oqOli8m2+0SKT/KPPniPqgIb85NzZIBkaJZQ0iAVWSRYc4nXayuI4OH9f/Qm+vg48yMPeDCU
      JuDOcPtWC+lkiCWpgDfef58cQuTsqKXh9Dl+9JOfUFfmxebOobCogPBkF8PTUcLz8yTSBpHp
      pwws2TnTsJ/ROzeYkXKwJ2bEWqAtbMMHwaaeYrhnlPwdJ0n3qng8NjTFhc2YJ5GS8JW4kGUZ
      VVKwLBPT0InFEliArDgIBDzYFnIoKJLQFA27TSKTSFBYVcPhXR5qTAWZCfIKi3FpCk6HAwmw
      9AwZ08KKz9M9Faf6wEFsva2YX9vqXFY9HKo7gEtJEks72VdTQ5EDLM230S+TsEE2LACSlKLx
      tx/SZtPILT3ApR0+UnIRn/32Z9yzVHYfPcfOHRKfffr3tCdlak6fx6FM85sP/x/2dIo9e0GS
      FSQAWX6+24OEosj4ymowPr7O9SEbueU1FOyVUWQJJOn5zKNKjiPMr//mbzh29hLu1Aw3bk7g
      9GjkShKWIiNJICs2NEUCHOw9VMRHN67T7XCx63A9JfnZcdpOWFtiJniFxFqg729bngbdSvJy
      nByoyN/sMl7KtKw13wtprbyorTCQPbvsiRZghcRaoNXLxtrEWiBhWxNdoFVYjCQIxcKbXcZL
      rcfeO3t25KEqW/OzUgRgFe60j26rQfD/+Y8/wOfJrq7LWsn6WC+O9tI3ESL7rjArbAXZHQAj
      QnfPBKOjA2T0l4/VxwfaGV9cwTqe2AyP+yee/ZxcoqlNzPJuZ1ndBUotzGMUFBGIhYmldRTD
      oK/9HgMjs+ieXbx15SSqqoAqMdLfxtOeAeZSdvZU5jHQN0X12Qvs9yX4/PO7zKdtnLr4Bqn2
      T7neuUxHayVvXj6M0+kAy2JmsIU7zb3k7DrK+WMVDHf3Mzs2wFTGTf2FS5T6s/Osj/D9ZHUL
      MDW3QDBQSGWuSfd0DFNPM72Q5Nyf/YAj3gjjcYgsTBFO6CzMhqg8eYWrx3xMJop49/JhFhdC
      yJKN3OISiv122h+3Unn8IqcvvclPfnSVoKYzNrMI8REeDuhc+eGP2GWM0j45z8z4HJVn3+Jc
      7Q7mZ9Z+lzshO2RxC6Az2t1Cd6QLl5TAyrdTW7Cf3IIiPA47GbeDPzgP4/SR57EjS16K8vNw
      2JZQVZ3Jp08x3UHKc3z0DM9hmqBndCzL4suNQlNJ8AZwKgo+n4PZjIXsDVLid7KQcGETA5At
      K3sDkJwilXuWf/7BIeySzuOb15lbNl56U+nZsp+v/vHVX3B7bAzdf8iIKx+HwwZ2F5nRO/z1
      0DBvNOx5djN/BcWJT/np395HcRVx6Yqbgamlrz2KsFWJmeAV2o5rgdbqNGg2zgRnbwuQxfwe
      B5Ulgc0u46XWYy2QskUnwUC0ACsm1gKtXjbWtnWjLQjfgegCrUI4lmJ5/uVfsV9vNlVhR0HO
      phx7KxIBWIWbrcObNgiuKPTxP/7dW5ty7K1oG3SBLEKT/dy/18jj7mGSLy4wZiYYGxonaYgh
      0Ha29QMQH+d+2zT+YCFKeIFQJgNYLI4PsWQoKH9wwsRibrCToU3q3ggbb+t3gUydWDyFK7eI
      6qpKABILw9x72I5asI/dFUFmJyfRw5P0xQIcyXficsoYyRB3r3/OohLkbMMZCjzatxxIeBVt
      /RbAvZMrZ3fTdesj/t9Ht1lYnuPuzUfY8opJzvTR1jfBzFArg0s+zh6pJDI9RSgVp+/uDeZt
      ebjS89wT+wJtWVu/BTDSKIEyrrxXzlhzI5PzS0RVJ3tLSrCVlOIN+phKFnKkugq39uLzIMNS
      VKF0Twl5thJUT8GfPITw6tr6AYjPc/PWA5ZjKWQtj4b9Rdjy+ml62Izb6aPm9HFkVX22j9CX
      HOw5EOSTxoc43E7KDp5mZ5F/056CsH62/kywZWEYBqZlIcnKsze6ZaEbBiChqApYFpIkIUlg
      mhZIEhIWhm4835Huq4Bs9lqgbzsNmo2zrS9kY21bvwWQJBRVRfmj32lfv1bV19bOyF+2BBKq
      9vIhktdlY0dwcyajCnM9m3LcrWrrtwBrTKwFWr1srG3rnwUShD9h63eB1kE0kSYeTm7Y8TRV
      pjAguj7rQQRgFT5vGdrQQfDOIh///d+K9T/rYY0DYDA/OsjQ9NLzr9tqVNXWkutQvuV+3/Bo
      iRhhXSLX6/qTt9OTISIZD7leMVsrrMwajwEkNIeLHDlK10QEn8+LKq/+20mZ8BxDMwvfert0
      ZJTh6dV2ScQ1wrazNW4BZHwFO/CpSfp1g+rqKogvMDibITbcinPPWfSRFrrHFtlx4DRH9+Qy
      NtTPyNAIUdPH2UsNuBJTNDU1s6wVc7Y6l8jUIH/f9RD3jsOcqttJZKSDpifD5O89xukDO559
      Yd0ymepv4TedYYoPnOTE3iBDT+7RNrTIzsNnqNnhZHRqGWO+l4h/PwXxER72jhEor+H0sT0o
      bjdORWFx6ClRLcXoiEnd8VLabt4mJOdx6sxJ8t2it7gVrf9ZoNQSba2PofgIO3NVbM4cgoV5
      TPQ8YCaUZHhkgorD56irsBiaiNDR3EpRbQPnj+7FppgkTSenLl7FlxxkYmaB+w+78AR8TLfc
      ZHD52SEs08Sy53P+whHmxyeJj7TSE8vj4qV6Qr2PmY0s0d/eTEjbxf4yP7LdSbAgSHiyk+Hp
      GHMTE0STOqGRHlrH4xys28n4vdvMyjnYEjNi97gtbEM+1vxlB6ipLERfGGEklKQoP59IaIFU
      RseTX0xJno+05WMhliFhOAgG/XgVSKVCFJSWkZvjYTnHRdJYJmPkEAwWUlRQSN7z6iVFpaS8
      HH/AxGsLE19eIlC8E6/XR4HDTsLQsQd2cbSmAjkxR99kiPxgPvFYiHQq9WWdsuKi9ugRArYk
      3UsmBbvzCaj52PzFG/EyCZtgQwKg2WzIgKSq6OEZepbC8NIvojgoLla48ZtfIruKqa8phK/N
      4dodhQQ8D+jp6sbp9REo2//S4+Xu2k3o01v8qsUEbwlXnQ4mbWkUCSxFRU2F6esPY1o6xXy1
      P5YkqdhsMuBkz/58ftfcidfjoKg6l8qStX1NhOywPjPBpkHafPb9VUyDjCWhKTJYJulUiowJ
      mqqgqCqWaaIoKlg6hqWgSAbJZBpLUnDYVEwkVEXG0DNIsopppEmndSRFxW63I0tgmc/uqyqQ
      yRhomkImnSKdMdFsdjRVQjcstOfrfvRMipRuoqoqqqJimQayomIZOpKmIQOWZZBKJDGQ0Gz2
      Z8+FzVkLtJLToNk42/pCNta2Pi2ArGCTv/r5y5OTkozN4eQPFhG8WJMjqc+LUXG6virrxcMo
      qvb85nZU7Q8vWi3J6pdPRNOe/aTZHGhfO5D24gaShGpzoH69iBf73shfnUaVJAWH6+XXsnLZ
      NQr8G3edq9wc54Yda7sRa4FWSKwFWr1srE2sBRK2NXFyexWausb5/PHo93oMSZL4T//8whpV
      JKyWCMAqzIZiPO6f3uwyhDWQvQGYecL//Lgdt03CG6zi8mvH8WqrW1MEgGkQXo7g9gZQRcdP
      eC57A2BmqLn0F9RXqAw23mQknOJAQCMWjWEpNtwuJ5aeIplKoZsSLrcHTbZIxmOkdHB6PNgU
      i0xaJ5PJgJ6go6OLiuojBP0uyCRIpA0UmxOPy46pp4jHEpjIONwebLJJLBrFQMXtdqMq4ioB
      W1H2BuAFyyCWMXEpJhO9T+gamSFjOth3/AjW08d0hxJYySTesjpqizPcb+7BkMER2MvpY0Ee
      /O42CYefUr9Fd/dTppdMjp6oIzn8iMG5JIaVw2vvNjD+4DrdswZWJETphXeptsZ40DtBJiOx
      4+AR6nYVbvYrIayDrA7A489+SntiiYrT73LFleST5jaWJA10iZlQNQU2PyfOn6VAzXD/cScT
      k0l2nbjK/mI7bXeuMbecj5pTwmsXTuKSMsguP5UHjuOWE7R0xoiEl4nMjTK1vJ/5zE7efXc/
      i52NjMsxupqeMJYAm2Ugz0ZEALaorA7Akcs/4qBjks6xCAk9QH5eAXsOn6bIppPWXCwPThBb
      jjCXmCWqOyjwWkxPTxDSbMzHXRQ4ZHL8eTg0BUnPkFiOEAotgStJzMjntSsn6bv1BablQE5O
      MTFfSHwxjO7TCOTnUlN6lOo8mbiRXeeuhbWTvcNBTzFlAY1ASSUn9uYyswhH6+uY7mjiftsA
      GUsCPUr7w3s8GYlx/MRhdu89TK45ReOjp1SdOEXQ5aK4JPfZkmnFRlVZPl2tj1lIOtkRNHjc
      NoC/8gD5dje7K3PpaW6iZzyCotqoPnsWc+QxjQ87iH3DNYqFV98rPBNsMjkwhKusDL/9+87K
      Zui+e53Hw/O4C6u5dO4IOfaXN45ruRbo1//1L7/3Y/yxbJxtfSEba3uFA7A5LMtibCbE1GL8
      ez/WqQM71qCiP5SNb7IXsrG2rB4DZKuiXA/lRbmbXYawBrJ3DCAIG0C0AKvwsGeSW23jK76f
      JMF/+McN61CRsFoiAKswtbBMU9fqAiBkl1c2ABNtX/D5k6cszqfILQ5y8tK7VBdozDxtYyRV
      yLFKOzeaJ7hcXwuYhMZ76Jm1c7xuN/HRFj66083B+jcp8CiUBO20XG+n8vIpfJv9xIQN9coG
      oLT2Ej+p3cf1j6apf+cIDiz0dJyMHGBfZSEyiyQSaQCMTJqU4WDvvjJkU2dqcJYjb/+AKieM
      zUcBjVQiiWlZZDIpdN3EkhVUyUQ3Jex2+x9dP0DYKl7ZAPwDmSVa7jYztRRDGV3k8tHn32K3
      4nQ0NTGyEMFyzXB0n4/Wzn7S4QTWkWOEFpJUlj3bd9PS09z53c8I6W4i4SRFJX7Cy0kOHH+N
      QzsDm/jkhPWyZQKQnOrjfu8YfrdKMjpBtPb52p3QMHfbB/F4HaTnMhin6zh19Cj2hgZKUvPc
      WfjDHeV8RVUcrzvN7L1bKGfP4ZkbZjaeAEQAtqItEwDV6WLHrsNcOLsPIxbFbXs+v+dwUbqj
      mlPnj+FIRpGcGovf+CgSiqIiyzKKoqJpCpIki8HrFvaKzwO4Kd9dgAqowRqOlSa59dnveTI8
      j6S42F1RCK6dnD7g5sEX17jXM4Fkga+0FA+A4qS0MABolOzegUOWCRYWocmQ8/w2TrePPL/Y
      mnyrEkshVuj7rAWSJPjVf1n79T9fl43LDV7Ixtq2TBdoIx3bW0xB7uZcI0xYW6IFWCGxL9Dq
      ZWNtr/gYQBC+H9EFWoWWvikaOydXfL8rJyo5tFtcdT6biACswvhchJtPRlZ8v0O7C0QAskzW
      B2Dq8TU+apvFIWtUn3mNk1V/+g1kpKKEEwpacpb+sMHRMpUbnSYXT+z841sSjSRw5XhEP3Ab
      y/oAyLKbSx/8hCoPgIVlmRi6gSXJqIqCZRpIsgKWiYWEqSeIxm34jDSJlAGmSTRuYlkWlmlg
      mBayoiBZUboeD7D/bC1uVQPLwDBMJFlBkSUs08S0TCxLQlEVZDEbtiVlfQD0VJiW258zarez
      u/YgtsVBHrY9JWNzUXfqNcId19lR/w7usds84gjHvOMMThVx7I8aCiOzxMMv7jAeSeIu2EtV
      ziwPW3oZnBvh7OU3mX34KYOLcbDlceHKUXpvNBLV0yzGderq36BWrAXakrI+ALLqpLyqmjKX
      gsdmcffRAxZSHhSijM+E+K679KemurjXM0UwYCcyOMaZf3GR07EgBxvqcCx20+45wF+8XslS
      zx16Z+Io3hJerz9CdHaI2YRYC7RVZX8AFBv5xaWUesDKxHD6y3jt5CWKXRaxlMXgrE4mlWBi
      Yhq98JunNGSni937TnH14n70pSVUIB2LEEul0TQXUniS5eQOFhaTOCtk4qoNh6YQkxWxFmgL
      y/rxnzOvGN/zC7dImoszJw/Seetjfvv7u0QMhYpdZTy49gmzShGluXY0V5DSoAubx09RXgA0
      HztL/DjyD3Ewb47f/urX3B+cR8VDaQnc+OgTpqwKTu5zcvPj3zDh2MXBkjyKi/MAcLhyCORs
      3NVghI0lZoJX6PusBfrXf36CKycq16Gqr2TjbOsL2Vhb1neBslFdVRE+78pbhQMV+etQjfB9
      iBZghcRaoNXLxtqyfgwgCOtJdIFW4cnANPd7VnaJpL98rYZ8v2udKhJWSwRgFUZmwnza/HRF
      9/mzM3tEALLQBgTAIjI9yN3GZpYMN0cbLlBd/N2/TGKZBolkCofTxXfZmcQyDSZ7HrHo3UNN
      qY9EMoHD6f5O9xW2n/UfA+hhnrQNc/DSD/jRe5cp8a1sEGSmEvT09ZIxv+MdLAvJX0p1iQ8z
      k6Kvp5vUd72vsO2sewugh2bIFFRRFnAgAV4zw9CTW9xrH8XUXBytv4w19RDnrnPstg/zUavK
      xTqTpk8HWFIhT0rwZHCU9sFpXr90kdJcJyN9d2luGiGejqEVlKJEQyhF+7h6fCedzY0MTkUp
      3H2QQmuSGw+6aR2c4fzZM0x3fM5czEbFkRPIYw9pG11G85bzzvv1TDV/xoOeWTKxJHvf/ICD
      yhRf3G8jbjipOd3AofK89X6phE2w7gGQFAVLN778t5GKMRyyeO9Hf4W0PEVzbx8BFb48F2vx
      bCWms5C3Lh/GYSTwlfVz8NAR7C+ukqp5qK1/g8r8OT7vdXLxcD6tHV3MjPXS3j2BPcfFxMhT
      DrzxBhcd+VQfPo6WiTNq2Tl99SpBB3RMqCiSyeLTTqZiB5haDvKDH7/Octc9xuU43Q8eMR21
      sOtRBkZnRQC2qHUPgOIrwr14k97pIipzdMLxNFY6RTxjoMTD6JITrBCGobM4NUXMKAVZpaC4
      BLdNwUhYxGNxdNPEJktIkgSygl1RkWUFh92JKkvIioKiapTXnuFywyESkRCSYjEUj6HrJqol
      4c8vJuCxoydmCaXyee+H52i/9jG6oWKllknqJolEHMNUsLt9nDl7mYN5EqGomCrZqtZ/DKC4
      OVp/ipnmT/jF7xpZxsXZ43to+uQX3Oxa4tixA1SUl9Nz67c0T0FlUQ6a5iU31/msQLuDYmea
      33z8KVPhFAAeTwC32wZaDoW5DpBV8nLzKN5VTZk2x4d//SH3e2aQ7DaKPfDxJ9eYjGTIzc9H
      BjRbgHznPB/9/W2kYDk+m5fKnXau/+rnNHbNICl2as6fZvrub/jZL3/PZCT5J56g8CoTM8EA
      pOm8/RmtI4s4AhVcvHSKPNfLZ3pXuxbov/2bN9hVvP5LqrNxtvWFbKxNBGCFLMuib3SOgcml
      Fd3vXG0FOW77OlX1lWx8k72QjbWJAKyQWAu0etlYm1gLJGxrYinEKnQ8neXRwOyfvM2BnUHq
      a8o2qCJhtUQAVuHpVIiPGvv+5G1M0xIBeAV8SxcoRUdHP6b5kmGCkSKeNP7h77+FaegsR6Os
      /chDJx5Pf4fbGcTjya9+Di+TWetShFfGtwTAJBKJvfxPsUFa+iMrPqClp5mbn+dlmfp+5mlp
      +S5XbozR0tL//GeDxck5UmtdivDK+M5doOGmj2mcTKIvRSg/dg5t9A5NQwqzw/t5/fU9PLrR
      yPRSksJ9xzlVCA+HRlmaCFG+dzeSt5AjlQV03m/Cv3MfU9PTlAb9tD66R894iMJdtRws1ZlM
      7mSXc5LP74/x1gdXGHt4h8ChcxQ6JRZG22l82EXUtHPs/FW8E3f4fDiKFY5QeLiewthjmu7P
      Mz65k0uXq2l9NIWRmGP3iXPE+x/RO7GIt+wAB7yzNDV1MzTUw8k3zzM/PI1vfwVPWxtp6RkF
      TzkXLx+k+0YT4fgy8wmL4+ffoqZcXD9yK/rOAZBVF3XnL1NtDXF3zk39hQasncU0HAqw2H6N
      1pEF8pwSnT0DHM8rJ2l5uPRuA14WuN08Q6IgQUguZZdDYtAwWJoc4HHPMHanm5HBHnaX1aOH
      R1k0M1QV2hmbmWI+mc9ux7N1zD0PbzGx5MFpLdA5NMcZu42a+reo0aa5Oy5Re+48ESlOQ8Nu
      iA6QMh3UX34bb6SD/9U5htejMdLbx/EfX+J0tIiGhkPAMjOGCelZmho7SHs8pEd6GQvtBnse
      l167SnxuiNlEDMQFVLek7x4ARcPtdKCkFGT5Wc8pHo1iGD5kxcbek1e5eriY5fAyanyegtId
      +JwaUMBuby93HkTZe+IkCsvPHk+2saPmDJdPHyYVXUJRVCZHBwjN2yk/sIuBOw+wHb2C7fk6
      fqevmHNnr7A/qLG0rKOPjuFyO1EMheflkI4ukzJNNAtyi8vI89jJRBVK953mjffHv7MAAAiW
      SURBVPMHMKIRVCdYsSgxw8QpPe+HSTKBkr2cuHoBnxklrli025y47SpJRf3y8YWt51v+axXy
      8/0AuAL5uFTA5iXf6wBvBe75Jn577SHqvrMULTbz85/+nObBWWSnh4Db+eUh8nZWgOygxK0i
      qzaC+fkEKvayU57n53/zN9ztGMNQnVTlaVjBneR788HrpzL41aRJ9eGjjDV9zId/9/dMx03s
      /ny8KqC5yPe5gHwKXGP86pefsmB6yPc/u69WeIiD3ml+9dO/5YvWp+imm6oy+NVPf8XTRZ1g
      ST6qVsCxGj83fv1Tfv3FYxL6V8/b7nCT43EibE1iJniFvutaoLdP7+Ffvndsg6r6SjbOtr6Q
      jbWJeYBVOLAzyD978/CfvM3uErGX6KtAtAArJNYCrV421iaGd8K2JrpAq9A9MseTp/Pf+HdZ
      kvgnV2s3sCJhtUQAVqF/fJFf3Oz+xr8rigjAq2JDu0DRqSlGFxbW9RiWZTLb/5iOsRCWZZJO
      pdZh2YWwVWxoADKJBNHUOq+8MQ2Stlz2FPsw0ym6OtvFvkDCN9q8LpCV5mnLPe73jCK7Czl9
      7jSZoVa6J2YIR1KUH77AsTKJe7camV5O4/Lu4sr79XiB8cH7tNwfJpKM4S4pwwjNYS89yGtH
      y+lpaaR3LEJpdR3B9MiX+wJdOHuWhYFGZpcsSmqPoYw30zYawRHYzdtvn2K27TZNHeOkEzr7
      rv6A/dosNxpbiJluas/Us79UnNbcijYvALFZesJufvDjf0xipJX2iVmKDJWahjcpUjN09I8y
      PZOmpPZ1Lu9UufNR65d7BxmSneoTr1EVnOd6t52LF8/wpKObmdFeWtpHceS4GOzuoOqdd/5g
      X6ChxylqL7xFiVehZ8aGgslsbxuTF6uZnHPx9gd/SaznHuPE6G5qYjxsYdeX6BiYEAHYojYv
      AIqCnEmSMi1SqTSSLIPswOu2o2RAUwHTQDcMzLROyvhaP0ZRcao2FEXF5fJgU2QUVUGSNXYf
      OcfFMwdIRsNIssVoIoFuPNsXKLeonAK/Ez0xy2zMz7sf1NP1+0/I6DKWnsawLFLJJJYloToC
      nH/nMtUBiMTEIGKr2tAAaC6Lvpuf8igtU3HsdU5U5/D5332IGtxDw5lSEhMWNllGUlVyfD4K
      A/ncu3mDrjZQ9QJe7G/rcnkBDVQ3uTk2kBR8OT6KigsJz97mw79uo7DyEGeO7SPPluSjj69x
      9mw9OX4/EqDafATUGT76ZJ4Sf5BiLQdXicW1v/sZRtKgquQoB87U8dm1X/IEJ/tONBDwiZ2d
      t6Ksnglemuzi5s3HRFGprD3HiYMlKN9+t1VI037zU9rGQmjeEi68Xk/hN2xh8l3WAimKxN/9
      5x+vS6XfJhtnW1/IxtqyOgDZyLIsOgan6Rj55tO5siTx49cObmBVX8nGN9kL2VibCMAKWZZF
      Op1GVbNzDjGdTmftOqVsrC07/xdfAdn6uSFJkqhtBUQAVkGSpKxtAQzDELWtgFgNKmxrYgyw
      QpZlYVnWl9+LzjamaYraVkAEQNjWsiuOgrDBsmtE8gqxTINUMokpqTgcNmRpY6/DqqeTpNI6
      FmB3ulFli1QygYGCw25HkSGTSpLWLWwOB6ois74VWlimSSqVQbXbUWUJyzJIJZIYKDidDmQs
      MukkKd3C7nCgyRKmkSGRyqBodhy29Xk7WpaFkUmjWzJ2uwaWRSYVJ61bIgCrNfe0hZstwxim
      TN3Fq+wr8m7o8bvu/Zb2SRmXQ6b2wnvkxTr47F4fhiWz7/RFDheZfPbRF0RN8JTWcPX0fpT1
      vFiyHqf3SRu93dPse+8q1TlOQkNtfNEyiGGYVJ95k32+GLdu3SGS1PHuOMHFkxV0Nf6OgZkk
      hpLPW++/Rs46TPVH5wZ53DnGctLGpbfqcQK3f/2/mVOLRQBWJ8PESJj6d35IfryfLwZmqS7y
      rvMn7B+xBbjy3mUK3BKQoePJHCfe/nNKMqNc75plx/IMgeNvcbVE4u6tVuK6ide2PgtJAFAc
      lO87jAc7KQUwMvRNLXP+jXfxWiEePuljvBCCe85xeU+Atrs3mAi5CGfKePeHtYS7b9AznuJk
      xdpfRcfp38GxU2X0PW5+/psYzrwjvH/5jAjA6iTR5QA+l4LNmYv90RQZYCPnOOeGO2nunyFQ
      XMXViwdJ4aPCo6JZfpzRp4QkjYI9DhRNIihbhC0T7zqtpAJAUnC5XURkiRTPuoiK3Y7TbkOz
      clCVBOmMDW+uD1mx48uxsRwLY/MEsSkKOYV5xMfDUFGw5qWpNgeKan7tAyrK0/YWBmdHRABW
      R0Myo6R0cKUTZNxOtA2u4PJf/TssyyDUe5PbHWGKzBgJHTx6krTLice+zGzUBA2iikLxBo9R
      JElCz+gYhokl6UiWDVmRyCRTgINMWsfpcBFJxjAs0GMx7B7PBtVWxD/59/8KU0+KAKyOnWC+
      Rcv9FtyJafy7T21s94clHt7sxRn0EpuMkLfHT5FD43FjM35zAXfhIYIlDprvNGEU25nRNeqU
      dfz0B9CTjI+PMzoxQUqSsJfuosRl0dLaitdYwPAfojgQp6ntMZklO5PRPOoDQebSn9PaGmNx
      NELNm+uzBWUiNMXw9BLj09Oog8Ps8lg8HA5T4JHFPMBqGakoQwMDJGx57N1Vil3dyDPKFqGp
      IYYnQ2i+IvZVliDpSUYG+ohKPvZUluPUJOZG+xhfTFNWWU2e17a+Ic3E6O8fYCn27CIl/pIq
      qgrtDPb0EVV87K/ehR2dufGnjM6n2bmvmjynSnxpmv6habwlu9hd5F+X0qKzw3SPzAGgOtxU
      7tlLdKKXqaW0CICwvYmJMGFbEwEQtjURAGFbEwEQtjURAGFbEwEQtjURAGFbEwEQtjURAGFb
      EwEQtjURAGFbEwEQtjURAGFbEwEQtjURAGFbEwEQtjURAGFb+/++l0jcnlugIgAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Notice recherche ovni et ext' width='192'>
      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
      2n+CgF3P/wdR1E9Ul++uqAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Notice recherche scientifique et témoignage' width='192'>
      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
      JV+o8n8Bpa/u8djsojgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='data pour iramuteq' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='data pour iramuteq (2)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
